{"ast":null,"code":"var _jsxFileName = \"/Users/alicia/Documents/wordle/src/components/Wordle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport Keypad from './Keypad';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle(_ref) {\n  _s();\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyup,\n    guesses,\n    isCorrect,\n    turn,\n    usedKeys\n  } = useWordle(solution);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup);\n    if (isCorrect) {\n      console.log('congrats');\n      window.removeEventListener('keyup', handleKeyup);\n    }\n    if (turn > 5) {\n      console.log('too many guesses');\n      window.removeEventListener('keyup', handleKeyup);\n    }\n\n    //clean eventlistener for a new one\n    return () => window.removeEventListener('keyup', handleKeyup);\n  }, [handleKeyup, isCorrect, turn]);\n\n  // useEffect(() => {\n  //     console.log(guesses, turn, isCorrect)\n  // }, [guesses, turn, isCorrect])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"solution - \", solution]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"current guess - \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      currentGuess: currentGuess,\n      guesses: guesses,\n      turn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n      usedKeys: usedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Wordle, \"NCYdjSCJ/sT2gjhhZ2qXdTtJqiM=\", false, function () {\n  return [useWordle];\n});\n_c = Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","useEffect","useState","useWordle","Grid","Keypad","Modal","jsxDEV","_jsxDEV","Wordle","_ref","_s","solution","currentGuess","handleKeyup","guesses","isCorrect","turn","usedKeys","showModal","setShowModal","window","addEventListener","console","log","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alicia/Documents/wordle/src/components/Wordle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport Keypad from './Keypad';\nimport Modal from './Modal';\n\nexport default function Wordle({ solution }) {\n    const {currentGuess, handleKeyup, guesses, isCorrect, turn, usedKeys} = useWordle(solution)\n    const [showModal, setShowModal] = useState(false)\nuseEffect(() => {\n    window.addEventListener('keyup', handleKeyup)\n\n    if(isCorrect){\n        console.log('congrats')\n        window.removeEventListener('keyup', handleKeyup)\n    }\n\n    if(turn > 5){\n        console.log('too many guesses')\n        window.removeEventListener('keyup', handleKeyup) \n    }\n\n    //clean eventlistener for a new one\n    return () => window.removeEventListener('keyup', handleKeyup)\n}, [handleKeyup, isCorrect, turn])\n\n// useEffect(() => {\n//     console.log(guesses, turn, isCorrect)\n// }, [guesses, turn, isCorrect])\n\n\n\n      return (\n        <div>\n            <div>solution - {solution}</div>\n            <div>current guess - {currentGuess}</div>\n            <Grid currentGuess={currentGuess} guesses={guesses} turn={turn}/>\n            <Keypad usedKeys={usedKeys}/>\n            <Modal/>\n        </div>\n      \n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM;IAACG,YAAY;IAAEC,WAAW;IAAEC,OAAO;IAAEC,SAAS;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGf,SAAS,CAACS,QAAQ,CAAC;EAC3F,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrDD,SAAS,CAAC,MAAM;IACZoB,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAER,WAAW,CAAC;IAE7C,IAAGE,SAAS,EAAC;MACTO,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBH,MAAM,CAACI,mBAAmB,CAAC,OAAO,EAAEX,WAAW,CAAC;IACpD;IAEA,IAAGG,IAAI,GAAG,CAAC,EAAC;MACRM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BH,MAAM,CAACI,mBAAmB,CAAC,OAAO,EAAEX,WAAW,CAAC;IACpD;;IAEA;IACA,OAAO,MAAMO,MAAM,CAACI,mBAAmB,CAAC,OAAO,EAAEX,WAAW,CAAC;EACjE,CAAC,EAAE,CAACA,WAAW,EAAEE,SAAS,EAAEC,IAAI,CAAC,CAAC;;EAElC;EACA;EACA;;EAIM,oBACET,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,GAAK,aAAW,EAACd,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChCtB,OAAA;MAAAkB,QAAA,GAAK,kBAAgB,EAACb,YAAY;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzCtB,OAAA,CAACJ,IAAI;MAACS,YAAY,EAAEA,YAAa;MAACE,OAAO,EAAEA,OAAQ;MAACE,IAAI,EAAEA;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjEtB,OAAA,CAACH,MAAM;MAACa,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7BtB,OAAA,CAACF,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGd;AAACnB,EAAA,CApCuBF,MAAM;EAAA,QAC8CN,SAAS;AAAA;AAAA4B,EAAA,GAD7DtB,MAAM;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}