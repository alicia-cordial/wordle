{"ast":null,"code":"var _jsxFileName = \"/Users/alicia/Documents/wordle/src/components/Wordle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle(_ref) {\n  _s();\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyup\n  } = useWordle(solution);\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Wordle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Wordle, \"42PwAD1tALs70XD887h7QYNIjB8=\", false, function () {\n  return [useWordle];\n});\n_c = Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","useEffect","useWordle","jsxDEV","_jsxDEV","Wordle","_ref","_s","solution","currentGuess","handleKeyup","window","addEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alicia/Documents/wordle/src/components/Wordle.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\n\nexport default function Wordle({ solution }) {\n    const {currentGuess, handleKeyup} = useWordle(solution)\n\nuseEffect(() => {\n    window.addEventListener('keyup', handleKeyup)\n})\n\n      return (\n    <div>Wordle</div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM;IAACG,YAAY;IAAEC;EAAW,CAAC,GAAGR,SAAS,CAACM,QAAQ,CAAC;EAE3DP,SAAS,CAAC,MAAM;IACZU,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;EACjD,CAAC,CAAC;EAEI,oBACFN,OAAA;IAAAS,QAAA,EAAK;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAErB;AAACV,EAAA,CAVuBF,MAAM;EAAA,QACUH,SAAS;AAAA;AAAAgB,EAAA,GADzBb,MAAM;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}