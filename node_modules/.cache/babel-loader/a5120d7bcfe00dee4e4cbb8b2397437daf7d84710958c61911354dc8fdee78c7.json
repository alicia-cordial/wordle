{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useWordle = solution => {\n  _s();\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  //format a guess into an array of letter Objects\n  const formatGuess = () => {};\n  const addNewGuess = () => {};\n\n  //tracking current guess\n  const handleKeyup = _ref => {\n    let {\n      key\n    } = _ref;\n    if (/^[A-Za-z]$/.test(key)) {\n      if (currentGuess < 5) {\n        setCurrentGuess(prev => {\n          return prev + key;\n        });\n      }\n    }\n  };\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isCorrect,\n    handleKeyup\n  };\n};\n_s(useWordle, \"cEsMVLAILFGQggpZhG+bSZgfUqA=\");\nexport default useWordle;","map":{"version":3,"names":["useState","useWordle","solution","_s","turn","setTurn","currentGuess","setCurrentGuess","guesses","setGuesses","history","setHistory","isCorrect","setIsCorrect","formatGuess","addNewGuess","handleKeyup","_ref","key","test","prev"],"sources":["/Users/alicia/Documents/wordle/src/hooks/useWordle.js"],"sourcesContent":["import { useState } from \"react\"\nconst useWordle = (solution) =>{\n    const[turn, setTurn] = useState(0)\n    const[currentGuess, setCurrentGuess] = useState(\"\")\n    const[guesses, setGuesses] = useState([])\n    const[history, setHistory] = useState([])\n    const[isCorrect, setIsCorrect] = useState(false)\n\n    //format a guess into an array of letter Objects\n    const formatGuess = () => {\n\n    }\n\n    const addNewGuess = () => {\n\n    }\n\n\n    //tracking current guess\n    const handleKeyup = ({key}) => {\n        if(/^[A-Za-z]$/.test(key)){\n            if(currentGuess < 5){\n                setCurrentGuess((prev) => {\n                    return prev + key\n                })\n            }\n        }\n    }\n\n    return{turn, currentGuess, guesses, isCorrect, handleKeyup}\n}\n\n\nexport default useWordle"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,MAAMC,SAAS,GAAIC,QAAQ,IAAI;EAAAC,EAAA;EAC3B,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAK,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAK,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEhD;EACA,MAAMc,WAAW,GAAGA,CAAA,KAAM,CAE1B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM,CAE1B,CAAC;;EAGD;EACA,MAAMC,WAAW,GAAGC,IAAA,IAAW;IAAA,IAAV;MAACC;IAAG,CAAC,GAAAD,IAAA;IACtB,IAAG,YAAY,CAACE,IAAI,CAACD,GAAG,CAAC,EAAC;MACtB,IAAGZ,YAAY,GAAG,CAAC,EAAC;QAChBC,eAAe,CAAEa,IAAI,IAAK;UACtB,OAAOA,IAAI,GAAGF,GAAG;QACrB,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EAED,OAAM;IAACd,IAAI;IAAEE,YAAY;IAAEE,OAAO;IAAEI,SAAS;IAAEI;EAAW,CAAC;AAC/D,CAAC;AAAAb,EAAA,CA7BKF,SAAS;AAgCf,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}