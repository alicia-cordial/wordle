{"ast":null,"code":"var _jsxFileName = \"/Users/alicia/Documents/wordle/src/components/Row.js\";\n// import React from 'react'\n\n// export default function Row({ guess, currentGuess }) {\n//   if(guess){\n//     return(\n//       <div className=\"row past\">\n//         {guess.map((l, i) => (\n//           <div key={i} className={l.color}>{l.key}</div>\n//         ))}\n//       </div>\n//     )\n//   }\n\n//   if(currentGuess){\n//     let letters = currentGuess.split('')\n\n//     return(\n//       <div className='row current'>\n//         {letters.map((letter, i) => (\n//           <div key={i} className='filled'>{letter}</div>\n//         ))}\n//         {[...Array(5 - letters.length)].map((_, i) => (\n//           <div key={i}></div>\n//         ))}\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <div className='row'>\n//         <div></div>\n//         <div></div>\n//         <div></div>\n//         <div></div>\n//         <div></div>\n//     </div>\n//   )\n// }\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  let {\n    guess,\n    currentGuess\n  } = _ref;\n  if (guess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row past\",\n      children: guess.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: l.color,\n        children: l.key\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  if (currentGuess) {\n    let letters = currentGuess.split('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row current\",\n      children: [letters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filled\",\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), [...Array(5 - letters.length)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Row","_ref","guess","currentGuess","className","children","map","l","i","color","key","fileName","_jsxFileName","lineNumber","columnNumber","letters","split","letter","Array","length","_","_c","$RefreshReg$"],"sources":["/Users/alicia/Documents/wordle/src/components/Row.js"],"sourcesContent":["// import React from 'react'\n\n// export default function Row({ guess, currentGuess }) {\n//   if(guess){\n//     return(\n//       <div className=\"row past\">\n//         {guess.map((l, i) => (\n//           <div key={i} className={l.color}>{l.key}</div>\n//         ))}\n//       </div>\n//     )\n//   }\n\n//   if(currentGuess){\n//     let letters = currentGuess.split('')\n\n//     return(\n//       <div className='row current'>\n//         {letters.map((letter, i) => (\n//           <div key={i} className='filled'>{letter}</div>\n//         ))}\n//         {[...Array(5 - letters.length)].map((_, i) => (\n//           <div key={i}></div>\n//         ))}\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <div className='row'>\n//         <div></div>\n//         <div></div>\n//         <div></div>\n//         <div></div>\n//         <div></div>\n//     </div>\n//   )\n// }\n\n\nimport React from 'react'\n\nexport default function Row({ guess, currentGuess }) {\n\n  if (guess) {\n    return (\n      <div className=\"row past\">\n        {guess.map((l, i) => (\n          <div key={i} className={l.color}>{l.key}</div>\n        ))}\n      </div>\n    )\n  }\n\n  if (currentGuess) {\n    let letters = currentGuess.split('')\n\n    return (\n      <div className=\"row current\">\n        {letters.map((letter, i) => (\n          <div key={i} className=\"filled\">{letter}</div>\n        ))}\n        {[...Array(5 - letters.length)].map((_,i) => (\n          <div key={i}></div>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"row\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n  \n}"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,GAAGA,CAAAC,IAAA,EAA0B;EAAA,IAAzB;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAEjD,IAAIC,KAAK,EAAE;IACT,oBACEH,OAAA;MAAKK,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBH,KAAK,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACdT,OAAA;QAAaK,SAAS,EAAEG,CAAC,CAACE,KAAM;QAAAJ,QAAA,EAAEE,CAAC,CAACG;MAAG,GAA7BF,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,IAAIX,YAAY,EAAE;IAChB,IAAIY,OAAO,GAAGZ,YAAY,CAACa,KAAK,CAAC,EAAE,CAAC;IAEpC,oBACEjB,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAC,QAAA,GACzBU,OAAO,CAACT,GAAG,CAAC,CAACW,MAAM,EAAET,CAAC,kBACrBT,OAAA;QAAaK,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAEY;MAAM,GAA7BT,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC9C,CAAC,EACD,CAAC,GAAGI,KAAK,CAAC,CAAC,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC,CAACb,GAAG,CAAC,CAACc,CAAC,EAACZ,CAAC,kBACtCT,OAAA,YAAUS,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,oBACEf,OAAA;IAAKK,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBN,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGV;AAACO,EAAA,GArCuBrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}